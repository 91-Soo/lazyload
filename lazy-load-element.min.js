var LazyLoadElement=function(){"use strict";function t(t,e,s){this.init(e,s);var l=this.makeElementNodeList(t);l.length?this.addObserve(l):this.callbacks&&this.callbacks.error&&this.callbacks.error(this.stateCodes.ERRORELEMENT,this.makeResult(null,null,null))}return t.prototype.init=function(t,e){this.debug=!1,this.config={root:t&&t.root?t.root:null,rootMargin:t&&t.rootMargin?t.rootMargin:"0px",threshold:t&&t.threshold?t.threshold:.01},this.isDisposable=!t||void 0===t.isDisposable||t.isDisposable,this.callbacks={load:e?e.load:null,call:e?e.call:null,error:e?e.error:null},this.stateCodes={NOTSUPPORT:{code:0,msg:"LazyLoadElement Not Support"},ERRORELEMENT:{code:1,msg:"LazyLoadElement Element Error"},LOAD:{code:2,msg:"LazyLoadElement load"},CALL:{code:3,msg:"LazyLoadElement call"}}},t.prototype.makeElementNodeList=function(t){var e=null;return t?t instanceof Element?e=t.querySelectorAll("[lazy-load]:not([lazy-load-loaded])"):t instanceof NodeList?e=t:this.callbacks&&this.callbacks.error&&this.callbacks.error(this.stateCodes.ERRORELEMENT,this.makeResult(null,null,null)):e=document.querySelectorAll("[lazy-load]:not([lazy-load-loaded])"),e},t.prototype.addObserve=function(t){"IntersectionObserver"in window?(this.debug&&console.log("IntersectionObserver support"),this.observer=new IntersectionObserver(function(t){t.forEach(function(t){0<t.intersectionRatio&&this.preLoad(t.target,t,this.observer),this.callbacks&&this.callbacks.call&&this.callbacks.call(this.stateCodes.CALL,this.makeResult(t.target,null,t))}.bind(this))}.bind(this),this.config),[].forEach.call(t,function(t){setTimeout(function(){t.setAttribute("lazy-load-unloaded",""),this.observer.observe(t)}.bind(this),1)}.bind(this))):(this.debug&&console.log("IntersectionObserver not support"),this.callbacks&&this.callbacks.error&&this.callbacks.error(this.stateCodes.NOTSUPPORT,this.makeResult(null,null,null)),[].forEach.call(t,function(t){this.preLoad(t)}.bind(this)))},t.prototype.preLoad=function(t,e,s){t.getAttribute("lazy-load-loaded")||([].forEach.call(t.attributes,function(s){if(s.nodeName.match(/data-lazy/)){var l=s.nodeName.replace(/data-lazy-/,""),o=t.getAttribute(s.nodeName);switch(l){case"class":t.classList.add(o);break;case"style":t.setAttribute(l,(t.getAttribute("style")||"")+o);break;case"src":t.onerror=function(){t.onerror=null,t.removeAttribute("src")},t.setAttribute(l,o);break;default:t.setAttribute(l,o)}this.callbacks&&this.callbacks.load&&this.callbacks.load(this.stateCodes.LOAD,this.makeResult(t,l,e))}}.bind(this)),t.removeAttribute("lazy-load-unloaded"),t.setAttribute("lazy-load-loaded",""),s&&this.isDisposable&&s.unobserve(t))},t.prototype.makeResult=function(t,e,s){return{element:t,attr:e,isIntersecting:s?s.isIntersecting:null,intersectionRatio:s?s.intersectionRatio:null}},t}();